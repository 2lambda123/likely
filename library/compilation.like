Compilation
-----------
Just-in-time (JIT) compilation is the key feature enabling Likely algorithms to execute fast. *[Hello World](?show=hello_world)* (reproduced below) made use of the JIT compiler to create a function that returns a new image with every pixel intensity divided in half.

    lenna = read("../data/misc/lenna.tiff")
    dark_lenna = lenna / 2

Let's **deconstruct this example** to see what's taking place behind the scenes:

    lenna = read("../data/misc/lenna.tiff")
    expr  = expression(lenna / 2)
    ast = replace(lenna, "num", expr)
    ast = {"lambda", {"num"}, ast}
    jit_function = compile(ast)
    dark_lenna = jit_function(lenna)

    show(likely_ir, "likely_ir")
    show(jit_function, "jit_function")

**lenna / 2** is a matrix expression retrieved using **expression()**. **replace()** substitutes occurences of **lenna** in the expression with a parameter **num** to generate **ast**, the *Likely Abstract Syntax Tree*. **compile()** returns **jit_function**, a *JIT-compiled function* from the given AST, and is subsequently called with **lenna** to produce **dark_lenna**.

All of these intermediate steps happen automatically when a matrix expression **lenna / 2** is assigned to a global variable **dark_lenna**.

[Previous](?show=matrix_io) | [Next](?show=c_api)
